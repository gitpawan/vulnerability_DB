<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1"%>
<!DOCTYPE html>
<head>
<meta charset="ISO-8859-1">
<link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css" rel="stylesheet">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js"></script>

<link rel="stylesheet" type="text/css" href="style/style.css">
<link rel="stylesheet" type="text/css" href="font-awesome-4.7.0/css/font-awesome.min.css">
<link rel="stylesheet" type="text/css" href="font-awesome-4.7.0/css/font-awesome.css">
<title>Vulnerability DB</title>
</head>
<body onload="loadDoc()">
  <div class="container-fluid">

	<div class="row" style="margin-left:40px !important;"> 
	<div class="col-md-3">
		<form action="add_data" method="post">
    <div class="row"> <!-- header row -->
      <div class="col-md-12"><br>
        <h4>Add Vulnerability Data</h3><hr>
      </div> 
    </div><!-- end header row -->

    <div class="row">

      <div class="col-md-12">
        <div class="bordered">
          <div class="form-group">
            <label id="1221" for="">Category</label>
            <input type="text" class="form-control form-control-sm" id="" name="category">
          </div>

          <div class="form-group">
            <label for="">Description</label>
            <textarea class="form-control" id="" name="descri"></textarea>
          </div>

          <div class="form-group">
            <label for="">References</label>
            <input type="text" class="form-control form-control-sm" id="" name="references">
          </div>

          <div class="form-group">
            <label for="">Remediation</label>
            <input type="text" class="form-control form-control-sm" id="" name="remediation">
          </div>

          <div class="form-group">
            <label for="">CWE-ID</label>
            <input type="text" class="form-control form-control-sm" id="" name="cwe">
          </div>
        </div>
      </div>
    </div>

    <div class="row"><!-- button row -->
      <div class="col-md-12"><hr>
        <button type="submit" onclick="loadDoc()" class="btn">Submit</button>
      </div>
    </div><!-- end button row -->
    </form>
    </div><!-- end left container row -->
    
    <!-- <div class="col-md-1"></div>-->
    
    <div class="col-md-8" style="padding-left: 70px;"><br>
    <div style="float:left"><h4>Vulnerability Details</h4></div>    
    <div class="icon" style="float:right;" data-toggle="modal" data-target="#myModal1">
    		<h4><abbr title="Configuration">
    			<i class="fa fa-sliders" aria-hidden="true"></i>
    		</abbr></h4>
    </div>
    	<jsp:include page="config.jsp" />
    	<div>
    		<table class="table table-condensed table-hover table-class order-table" id= "table-id"> 
			    <thead>
			      <tr>
			      	<th>
			      		<div class="form-group">
							<input type="search" class="light-table-filter form-control-sm" data-table="order-table" placeholder="Filter" style="float:left;max-width:80%">
							<button type="button" class="btn btn-default btn-sm" onclick="loadDoc()" style="float:right">
          						<i class="fa fa-chevron-up" aria-hidden="true"></i> Collapse All
        					</button>
						</div>
			      	        
			      	</th>
			      </tr>
			    </thead>
			    <tbody id="demo">
			     </tbody>
			</table>
    	</div>
		  
		<script>
			function loadDoc() {
  				var xhttp = new XMLHttpRequest();
  				xhttp.onreadystatechange = function() {
    				if (this.readyState == 4 && this.status == 200) {
      					document.getElementById("demo").innerHTML = this.responseText;
    				}
 				};
  			xhttp.open("POST", "/vulnerability_DB/ShowVulData", true);
  			xhttp.withCredentials = true;
  			xhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
  			xhttp.send();
			}
		</script> 
		<script>
			function testConnection(formData) {
				//var formData = new FormData(form1) ;
			let myForm = document.getElementById('form1');
			let formData1 = new FormData(myForm);
			console.log(formData1);
  				var xhttp = new XMLHttpRequest();
  				xhttp.onreadystatechange = function() {
    				if (this.readyState == 4 && this.status == 200) {
      					document.getElementById("testConn").innerHTML = this.responseText;
    				}
 				};
  			xhttp.open("GET", "/vulnerability_DB/TestConnection", true);
  			xhttp.withCredentials = true;
  			xhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
  			xhttp.send();
			}
		</script>  
		<script>
		function submitRequest()
	      {
			let host = document.getElementsByName("host")[0].value;
			let port = document.getElementsByName("port")[0].value;
			let username = document.getElementsByName("username")[0].value;
			let password = document.getElementsByName("password")[0].value;
			let database = document.getElementsByName("database")[0].value;
			
	        var xhr = new XMLHttpRequest();
	        xhr.open("POST", "http:\/\/localhost\/vulnerability_DB\/SetDBParam", true);
	        xhr.setRequestHeader("Accept", "text\/html,application\/xhtml+xml,application\/xml;q=0.9,*\/*;q=0.8");
	        xhr.setRequestHeader("Accept-Language", "en-US,en;q=0.5");
	        xhr.setRequestHeader("Content-Type", "application\/x-www-form-urlencoded");
	        xhr.withCredentials = true;
	        xhr.onreadystatechange = function() {
				if (this.readyState == 4 && this.status == 200) {
  					document.getElementById("testConn").innerHTML = this.responseText;
				}
				};
	        var body = "v=1&host=".concat(host).concat("&port=").concat(port).concat("&username=").concat(username).concat("&password=").concat(password).concat("&database=").concat(database);
	        var aBody = new Uint8Array(body.length);
	        for (var i = 0; i < aBody.length; i++)
	          aBody[i] = body.charCodeAt(i); 
	        
	        xhr.send(new Blob([aBody]));
	      }
		</script> 
    
    </div>
    
   </div>


  </div> <!-- END CONTAINER -->






<script>
function unhide(divID) {
    var item = document.getElementById(divID);
    if (item) {
      item.className=(item.className=='hidden')?'unhidden':'hidden';
    }
  }
</script>


<script>
(function(document) {
	'use strict';

	var LightTableFilter = (function(Arr) {

		var _input;

		function _onInputEvent(e) {
			_input = e.target;
			var tables = document.getElementsByClassName(_input.getAttribute('data-table'));
			Arr.forEach.call(tables, function(table) {
				Arr.forEach.call(table.tBodies, function(tbody) {
					Arr.forEach.call(tbody.rows, _filter);
				});
			});
		}

		function _filter(row) {
			var text = row.textContent.toLowerCase(), val = _input.value.toLowerCase();
			row.style.display = text.indexOf(val) === -1 ? 'none' : 'table-row';
		}

		return {
			init: function() {
				var inputs = document.getElementsByClassName('light-table-filter');
				Arr.forEach.call(inputs, function(input) {
					input.oninput = _onInputEvent;
				});
			}
		};
	})(Array.prototype);

	document.addEventListener('readystatechange', function() {
		if (document.readyState === 'complete') {
			LightTableFilter.init();
		}
	});

})(document);

</script>


<style>
	.hidden { display: none; }
	.unhidden { display: block; }
	a {
		text-decoration: none;
	}
</style>


<jsp:include page="config.jsp" />

</body>
</html>